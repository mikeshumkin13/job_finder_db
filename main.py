from database.create_database import create_database
from database.create_tables import create_tables
from api.hh_api import get_vacancies_by_employer_id
from models.company import Company
from models.vacancy import Vacancy
from storage.db_manager import DBManager
import psycopg2
from config import DB_NAME, DB_USER, DB_PASSWORD, DB_HOST, DB_PORT


def save_data_to_database(employer_ids: list[int]) -> None:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å API –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    """
    try:
        conn = psycopg2.connect(
            dbname=DB_NAME,
            user=DB_USER,
            password=DB_PASSWORD,
            host=DB_HOST,
            port=DB_PORT,
        )

        for employer_id in employer_ids:
            vacancies_data = get_vacancies_by_employer_id(employer_id, per_page=20)
            if not vacancies_data.get("items"):
                continue

            company = Company.from_dict(vacancies_data["items"][0]["employer"])
            company.save_to_db(conn)

            vacancies = [
                Vacancy.from_dict(item)
                for item in vacancies_data.get("items", [])
            ]
            for vacancy in vacancies:
                vacancy.save_to_db(conn)

        conn.close()
        print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")


def user_interface():
    """
    –ü—Ä–æ—Å—Ç–æ–π CLI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    db = DBManager()

    while True:
        print("\n=== –ú–µ–Ω—é ===")
        print("1 - –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π")
        print("2 - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏")
        print("3 - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ä–µ–¥–Ω—é—é –∑–∞—Ä–ø–ª–∞—Ç—É")
        print("4 - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π")
        print("5 - –ù–∞–π—Ç–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")
        print("0 - –í—ã—Ö–æ–¥")

        choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: ")

        if choice == "1":
            for line in db.get_companies_and_vacancies_count():
                print(line)

        elif choice == "2":
            for line in db.get_all_vacancies():
                print(line)

        elif choice == "3":
            print(f"–°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞ –ø–æ –≤—Å–µ–º –≤–∞–∫–∞–Ω—Å–∏—è–º: {db.get_avg_salary()} ‚ÇΩ")

        elif choice == "4":
            for line in db.get_vacancies_with_higher_salary():
                print(line)

        elif choice == "5":
            keyword = input("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞: ")
            for line in db.get_vacancies_with_keyword(keyword):
                print(line)

        elif choice == "0":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break

        else:
            print("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


if __name__ == "__main__":
    # 1. –°–æ–∑–¥–∞—ë–º –ë–î –∏ —Ç–∞–±–ª–∏—Ü—ã
    create_database()
    create_tables()

    # 2. –£–∫–∞–∑—ã–≤–∞–µ–º 10 employer_id (–∫–æ–º–ø–∞–Ω–∏–π)
    employer_ids = [
        1740,    # –Ø–Ω–¥–µ–∫—Å
        3529,    # –°–±–µ—Ä
        78638,   # VK
        15478,   # Ozon
        64174,   # –¢–∏–Ω—å–∫–æ—Ñ—Ñ
        4181,    # –ú–¢–°
        907345,  # –ê–ª—å—Ñ–∞-–±–∞–Ω–∫
        1002342, # –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –ö–∞—Å–ø–µ—Ä—Å–∫–æ–≥–æ
        3127,    # Mail.ru
        1002782  # Avito
    ]

    # 3. –ü–æ–ª—É—á–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    save_data_to_database(employer_ids)

    # 4. –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_interface()
